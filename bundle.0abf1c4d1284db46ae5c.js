(()=>{"use strict";(()=>{class e{constructor(e=32,t=64){this.rows=e,this.cols=t,this.display=Array.from(Array(this.rows),(()=>new Array(this.cols).fill(0)))}get rowCount(){return this.rows}get colCount(){return this.cols}clearScreen(){this.display=Array.from(Array(this.rows),(()=>new Array(this.cols).fill(0)))}setPixelOn(e,t){this.validateCoordinates(e,t),this.display[e][t]=1}setPixelOff(e,t){this.validateCoordinates(e,t),this.display[e][t]=0}getPixelAt(e,t){return this.validateCoordinates(e,t),this.display[e][t]}validateCoordinates(e,t){if(e<0||e>=this.rowCount||t<0||t>=this.colCount)throw new Error(`Invalid row or column index. The specified row or column index is out of range. row:${e}, col:${t}`)}}class t{keymap={49:1,50:2,51:3,52:12,81:4,87:5,69:6,82:13,65:7,83:8,68:9,70:14,90:10,88:0,67:11,86:15};keyState=new Array(16);constructor(e){this.inputBuffer=e,window.addEventListener("keydown",this.onKeyDown.bind(this)),window.addEventListener("keyup",this.onKeyUp.bind(this))}onKeyDown(e){const t=e.keyCode;t in this.keymap&&(this.inputBuffer.setKeyPressedTrue(this.keymap[t]),console.log(this.keymap[t]+" pressed down"))}onKeyUp(e){const t=e.keyCode;t in this.keymap&&(this.inputBuffer.setKeyPressedFalse(this.keymap[t]),console.log(this.keymap[t]+" pressed up"))}}class s{keyState=new Array(16).fill(!1);setKeyPressedFalse(e){this.validateKey(e),this.keyState[e]=!1}setKeyPressedTrue(e){this.validateKey(e),this.keyState[e]=!0}isKeyPressed(e){return this.validateKey(e),this.keyState[e]}getAnyKeyPressed(){return this.keyState.indexOf(!0)}validateKey(e){if(e<0||e>15)throw new Error(`Chip8 key code must be between 0 and 15, got ${e}`)}}class r{constructor(e=4096){this.memorySize=e,this.memory=new Uint8Array(this.memorySize)}reset(){this.memory=new Uint8Array(this.memorySize)}read(e){return this.validateAddress(e),this.memory[e]}write(e,t){this.validateAddress(e),this.memory[e]=t}fetchInstruction(e){this.validateAddress(e);return this.read(e)<<8|this.read(e+1)}load(e,t){if(t+e.length>this.memorySize)throw new Error("Program too large to fit in memory");for(const s of e)this.write(t,s),t++}validateAddress(e){if(e<0||e>=this.memorySize)throw new Error("Invalid memory address "+e)}}class i{SP=0;constructor(e=16){this.size=e,this.stack=new Uint16Array(e)}reset(){this.stack=new Uint16Array(this.size),this.SP=0}push(e){if(this.SP>=this.size)throw new Error("Stack overflow. The stack is already full and cannot accept any more values.");this.stack[this.SP]=e,this.SP++}pop(){if(this.SP<=0)throw new Error("pop called on empty stack");return this.SP>0&&this.SP--,this.stack[this.SP]}}class a{constructor(e){this.frameBuffer=e}update(){var e=document.getElementById("myCanvas"),t=e.getContext("2d");const s=e.width/this.frameBuffer.colCount,r=e.height/this.frameBuffer.rowCount;for(let e=0;e<this.frameBuffer.rowCount;e++)for(let i=0;i<this.frameBuffer.colCount;i++)1==this.frameBuffer.getPixelAt(e,i)?t.fillStyle="white":t.fillStyle="black",t.fillRect(i*s,e*r,s,r)}}class h{constructor(e=16){this.registerCount=e,this.registers=new Uint8Array(e)}reset(){this.registers=new Uint8Array(this.registerCount)}getRegister(e){return this.validateRegIndex(e),this.registers[e]}addToReg(e,t){this.validateRegIndex(e),this.registers[e]+=t}copyReg(e,t){this.validateRegIndex(e),this.validateRegIndex(t),this.registers[e]=this.registers[t]}setRegister(e,t){this.validateRegIndex(e),this.registers[e]=t}validateRegIndex(e){if(e<0||e>=this.registerCount)throw new Error("Invalid register index. The specified register index is not valid")}}class o{I=80;PC=512;delayTimer=0;soundTimer=0;constructor(e,t,s,r,i,a){this.memory=e,this.stack=t,this.registers=s,this.frameBuffer=r,this.display=i,this.inputBuffer=a}startTimers(){this.delayTimerInterval=setInterval(this.updateDelayTimer.bind(this),16.666666666666668),this.soundTimerInterval=setInterval(this.updateSoundTimer.bind(this),16.666666666666668)}stopTimers(){clearInterval(this.delayTimerInterval),clearInterval(this.soundTimer)}reset(){this.I=80,this.PC=512,this.delayTimer=0,this.soundTimer=0,this.memory.reset(),this.registers.reset(),this.stack.reset(),this.cls()}cycle(){const e=this.memory.fetchInstruction(this.PC);this.PC+=2;const t=this.decode(e);this.execute(t)}updateDelayTimer(){this.delayTimer>0&&this.delayTimer--}updateSoundTimer(){this.soundTimer>0&&this.soundTimer--}decode(e){return{raw:e,opcode:61440&e,func:15&e,vx:(3840&e)>>8,vy:(240&e)>>4,n:15&e,nn:255&e,nnn:4095&e}}execute(e){const t=e.opcode,s=e.func,r=e.vx,i=e.vy,a=e.n,h=e.nn,o=e.nnn;switch(t){case 0:switch(e.raw){case 224:this.cls();break;case 238:this.ret();break;default:throw new Error(`Instruction not implemented: ${e}`)}break;case 4096:this.jump(o);break;case 8192:this.call(o);break;case 12288:this.skipEqi(r,h);break;case 16384:this.skipNeqi(r,h);break;case 20480:this.skipEq(r,i);break;case 24576:this.loadi(r,h);break;case 28672:this.addi(r,h);break;case 32768:switch(s){case 0:this.load(r,i);break;case 1:this.or(r,i);break;case 2:this.and(r,i);break;case 3:this.xor(r,i);break;case 4:this.add(r,i);break;case 5:this.sub(r,i);break;case 6:this.shiftRight(r);break;case 7:this.subReverse(r,i);break;case 14:this.shiftLeft(r);break;default:throw new Error(`Instruction not implemented: ${e}`)}break;case 36864:this.skipNeq(r,i);break;case 40960:this.loadIndex(o);break;case 45056:this.jumpOffset(o);break;case 49152:this.rnd(r,h);break;case 53248:this.draw(r,i,a);break;case 57344:switch(255&e.raw){case 158:this.skipPressed(r);break;case 161:this.skipNotPressed(r);break;default:throw new Error(`Instruction not implemented: ${e}`)}break;case 61440:switch(255&e.raw){case 7:this.loadVxDt(r);break;case 10:this.getKey(r);break;case 21:this.loadDtVx(r);break;case 24:this.loadStVx(r);break;case 30:this.addIndex(r);break;case 41:this.indexTofontCharacter(r);break;case 51:this.toDecimal(r);break;case 85:this.saveRegisters(r);break;case 101:this.loadRegisters(r);break;default:throw new Error(`Instruction not implemented: ${e}`)}break;default:throw new Error(`Instruction not implemented: ${e}`)}}cls(){this.frameBuffer.clearScreen(),this.display.update()}ret(){this.PC=this.stack.pop()}jump(e){this.PC=e}call(e){this.stack.push(this.PC),this.PC=e}skipEqi(e,t){this.registers.getRegister(e)==t&&(this.PC+=2)}skipNeqi(e,t){this.registers.getRegister(e)!=t&&(this.PC+=2)}skipEq(e,t){this.registers.getRegister(e)==this.registers.getRegister(t)&&(this.PC+=2)}loadi(e,t){this.registers.setRegister(e,t)}addi(e,t){this.registers.addToReg(e,t)}load(e,t){this.registers.copyReg(e,t)}or(e,t){this.registers.setRegister(e,this.registers.getRegister(e)|this.registers.getRegister(t))}and(e,t){this.registers.setRegister(e,this.registers.getRegister(e)&this.registers.getRegister(t))}xor(e,t){this.registers.setRegister(e,this.registers.getRegister(e)^this.registers.getRegister(t))}add(e,t){this.registers.getRegister(e)+this.registers.getRegister(t)>255&&this.registers.setRegister(15,1),this.registers.addToReg(e,this.registers.getRegister(t))}sub(e,t){this.registers.getRegister(e)>this.registers.getRegister(t)?this.registers.setRegister(15,1):this.registers.setRegister(15,0),this.registers.setRegister(e,this.registers.getRegister(e)-this.registers.getRegister(t))}shiftRight(e){this.registers.setRegister(15,1&this.registers.getRegister(e)),this.registers.setRegister(e,this.registers.getRegister(e)>>1)}subReverse(e,t){this.registers.getRegister(t)>this.registers.getRegister(e)?this.registers.setRegister(15,1):this.registers.setRegister(15,0),this.registers.setRegister(e,this.registers.getRegister(t)-this.registers.getRegister(e))}shiftLeft(e){this.registers.setRegister(15,1&this.registers.getRegister(e)),this.registers.setRegister(e,this.registers.getRegister(e)<<1)}skipNeq(e,t){this.registers.getRegister(e)!=this.registers.getRegister(t)&&(this.PC+=2)}loadIndex(e){this.I=e}jumpOffset(e){this.PC=this.registers.getRegister(0)+e}rnd(e,t){this.registers.setRegister(e,Math.floor(256*Math.random())&t)}draw(e,t,s){this.registers.setRegister(15,0);let r=this.registers.getRegister(t)%this.frameBuffer.rowCount;for(let t=0;t<s&&!(r>=this.frameBuffer.rowCount);t++){let s=this.registers.getRegister(e)%this.frameBuffer.colCount;const i=this.memory.read(this.I+t);for(let e=128;e>=1&&!(s>=this.frameBuffer.colCount);e/=2){const t=i&e;0!=t&&0!=this.frameBuffer.getPixelAt(r,s)?(this.frameBuffer.setPixelOff(r,s),this.registers.setRegister(15,1)):0!=t&&0==this.frameBuffer.getPixelAt(r,s)&&this.frameBuffer.setPixelOn(r,s),s++}r++}this.display.update()}skipPressed(e){this.inputBuffer.isKeyPressed(this.registers.getRegister(e))&&(this.PC+=2)}skipNotPressed(e){this.inputBuffer.isKeyPressed(this.registers.getRegister(e))||(this.PC+=2)}loadVxDt(e){this.registers.setRegister(e,this.delayTimer)}loadDtVx(e){this.delayTimer=this.registers.getRegister(e)}loadStVx(e){this.soundTimer=this.registers.getRegister(e)}getKey(e){const t=this.inputBuffer.getAnyKeyPressed();t<=0?this.PC-=2:this.registers.setRegister(e,t)}addIndex(e){this.I=this.I+this.registers.getRegister(e)}indexTofontCharacter(e){this.I=80+5*this.registers.getRegister(e)}toDecimal(e){const t=this.registers.getRegister(e).toString().padStart(3,"0").split("").map(Number);for(let e=0;e<=2;e++)this.memory.write(this.I+e,t[e])}saveRegisters(e){for(let t=0;t<=e;t++)this.memory.write(this.I+t,this.registers.getRegister(t))}loadRegisters(e){for(let t=0;t<=e;t++)this.registers.setRegister(t,this.memory.read(this.I+t))}}const n={0:[240,144,144,144,240],1:[32,96,32,32,112],2:[240,16,240,128,240],3:[240,16,240,16,240],4:[144,144,240,16,16],5:[240,128,240,16,240],6:[240,128,240,144,240],7:[240,16,32,64,64],8:[240,144,240,144,240],9:[240,144,240,16,240],10:[240,144,240,144,144],11:[224,144,224,144,224],12:[240,128,128,128,240],13:[224,144,144,144,224],14:[240,128,240,128,240],15:[240,128,240,128,128]};const g=new class{frameBuffer=new e(32,64);inputBuffer=new s;keyboard=new t(this.inputBuffer);memory=new r(4096);stack=new i;display=new a(this.frameBuffer);registers=new h(16);cpu=new o(this.memory,this.stack,this.registers,this.frameBuffer,this.display,this.inputBuffer);loadFontToMemory(){let e=80;for(const t in n)this.memory.load(n[t],e),e+=n[t].length}loadProgramToMemory(e){this.memory.load(e,512)}start(){this.cpu.startTimers(),this.cycleInterval=setInterval(this.cpu.cycle.bind(this.cpu),1.4285714285714286)}pasue(){this.cpu.stopTimers(),clearInterval(this.cycleInterval)}stop(){clearInterval(this.cycleInterval),this.cpu.stopTimers(),this.cpu.reset(),this.display.update()}next(){this.cpu.cycle()}};document.getElementById("rom-selector").addEventListener("change",(function(){const e=this.value;fetch(`roms/${e}`).then((e=>{if(!e.ok)throw new Error("ROM not found");return e.arrayBuffer()})).then((e=>{g.stop();const t=new Uint8Array(e);g.loadFontToMemory(),g.loadProgramToMemory(t),g.start()})).catch((e=>{console.log(`${e}`),g.stop()}))}))})()})();